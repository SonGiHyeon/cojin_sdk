/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FaucetTracker,
  FaucetTrackerInterface,
} from "../../contracts/FaucetTracker";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getFaucetInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isReceive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isAdminReceive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "lastReceivedAt",
            type: "uint256",
          },
        ],
        internalType: "struct FaucetTracker.FaucetInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isAdmin",
        type: "bool",
      },
    ],
    name: "markReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "records",
    outputs: [
      {
        internalType: "bool",
        name: "isReceive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isAdminReceive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "lastReceivedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "resetAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "setAdminReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "setUserReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c1c806100616000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806364c051a21161006657806364c051a2146101475780636b8ab97d146101635780636d7419a81461017f5780638da5cb5b1461019b578063d489b8d3146101b957610093565b806330ccebb514610098578063469e9067146100c95780634a2710bd146100fb57806359c303ab14610117575b600080fd5b6100b260048036038101906100ad9190610997565b6101d5565b6040516100c09291906109df565b60405180910390f35b6100e360048036038101906100de9190610997565b610279565b6040516100f293929190610a21565b60405180910390f35b61011560048036038101906101109190610997565b6102bd565b005b610131600480360381019061012c9190610997565b6103f0565b60405161013e9190610ab8565b60405180910390f35b610161600480360381019061015c9190610aff565b610488565b005b61017d60048036038101906101789190610997565b6105ae565b005b61019960048036038101906101949190610997565b6106b2565b005b6101a36107e5565b6040516101b09190610b4e565b60405180910390f35b6101d360048036038101906101ce9190610997565b61080b565b005b60008060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016001820154815250509050806020015181600001519250925050915091565b60006020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060010154905083565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034490610bc6565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550426000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b6103f861090f565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016001820154815250509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050f90610bc6565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081156105825760018160000160016101000a81548160ff0219169083151502179055506105a0565b60018160000160006101000a81548160ff0219169083151502179055505b428160010181905550505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063590610bc6565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a81549060ff02191690556001820160009055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990610bc6565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff021916908315150217905550426000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461089b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089290610bc6565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a81549060ff02191690556001820160009055505050565b6040518060600160405280600015158152602001600015158152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061096482610939565b9050919050565b61097481610959565b811461097f57600080fd5b50565b6000813590506109918161096b565b92915050565b6000602082840312156109ad576109ac610934565b5b60006109bb84828501610982565b91505092915050565b60008115159050919050565b6109d9816109c4565b82525050565b60006040820190506109f460008301856109d0565b610a0160208301846109d0565b9392505050565b6000819050919050565b610a1b81610a08565b82525050565b6000606082019050610a3660008301866109d0565b610a4360208301856109d0565b610a506040830184610a12565b949350505050565b610a61816109c4565b82525050565b610a7081610a08565b82525050565b606082016000820151610a8c6000850182610a58565b506020820151610a9f6020850182610a58565b506040820151610ab26040850182610a67565b50505050565b6000606082019050610acd6000830184610a76565b92915050565b610adc816109c4565b8114610ae757600080fd5b50565b600081359050610af981610ad3565b92915050565b60008060408385031215610b1657610b15610934565b5b6000610b2485828601610982565b9250506020610b3585828601610aea565b9150509250929050565b610b4881610959565b82525050565b6000602082019050610b636000830184610b3f565b92915050565b600082825260208201905092915050565b7f4e4f545f4f574e45520000000000000000000000000000000000000000000000600082015250565b6000610bb0600983610b69565b9150610bbb82610b7a565b602082019050919050565b60006020820190508181036000830152610bdf81610ba3565b905091905056fea2646970667358221220a4fc3aea784a2b144c768a3a85bcf50adba572eaa2c8441b150ae904c1f4cc5264736f6c63430008140033";

type FaucetTrackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetTrackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FaucetTracker__factory extends ContractFactory {
  constructor(...args: FaucetTrackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FaucetTracker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FaucetTracker__factory {
    return super.connect(runner) as FaucetTracker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetTrackerInterface {
    return new Interface(_abi) as FaucetTrackerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FaucetTracker {
    return new Contract(address, _abi, runner) as unknown as FaucetTracker;
  }
}
